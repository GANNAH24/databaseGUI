@model MS3GUI.Models.ProfileViewModel

@{
    ViewData["Title"] = "Admin Profile";
}

<h2>Admin Profile</h2>

<div>
    <p><strong>Admin ID:</strong> @Model.AdminId</p>
    <label>Admin Name:</label>
    <span>@Model.AdminName</span>
</div>
<div>
    <label>Email:</label>
    <span>@Model.Email</span>
</div>

<form asp-action="EditAdminProfile" method="post">
    <div class="form-group">
        <label asp-for="AdminName"></label>
        <input asp-for="AdminName" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Save Changes</button>
</form>

<div id="message"></div>

<h3>Delete Instructor</h3>
<form id="deleteInstructorForm" method="post">
    <div class="form-group">
        <label for="InstructorEmail">Instructor Email</label>
        <input type="email" id="InstructorEmail" name="instructorEmail" class="form-control" required />
    </div>
    <button type="submit" class="btn btn-danger">Delete Instructor</button>
</form>

<h3>Delete Learner</h3>
<form id="deleteLearnerForm" method="post">
    <div class="form-group">
        <label for="LearnerEmail">Learner Email</label>
        <input type="email" id="LearnerEmail" name="learnerEmail" class="form-control" required />
    </div>
    <button type="submit" class="btn btn-danger">Delete Learner</button>
</form>


<form asp-action="CreateDiscussionForum" method="get">
    <button type="submit" class="btn btn-primary">Create Discussion Forum</button>
</form>


<a asp-action="ViewEmotionalReview" asp-controller="EmotionalfeedbackReviewsControllerAdmin" asp-route-instructorId="@Model.InstructorId" class="btn btn-primary">
    View Emotional Feedback Review
</a>



<a asp-action="Index" asp-controller="Notification" class="btn btn-primary">
    View Notifications
</a>




@section Scripts {
    <script>
        document.getElementById('deleteInstructorForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            const formData = new FormData(this);
            const response = await fetch('@Url.Action("DeleteInstructor", "Account")', {
                method: 'POST',
                body: formData
            });
            const result = await response.json();
            document.getElementById('message').innerText = result.message;
        });

        document.getElementById('deleteLearnerForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            const formData = new FormData(this);
            const response = await fetch('@Url.Action("DeleteLearner", "Account")', {
                method: 'POST',
                body: formData
            });
            const result = await response.json();
            document.getElementById('message').innerText = result.message;
        });
    </script>
}


